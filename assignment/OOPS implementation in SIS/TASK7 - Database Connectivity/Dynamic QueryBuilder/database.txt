 public static void DynamicQueryBuilder(string tableName, List<string> columns, Dictionary<string, string> conditions, string orderByColumn, bool ascending)
 {
     using (SqlConnection con = new SqlConnection(connectionString))
     {
         con.Open();

         try
         {
             // 1. SELECT clause
             string selectedColumns = columns.Count > 0 ? string.Join(", ", columns) : "*";

             // 2. Building query
             string query = $"SELECT {selectedColumns} FROM {tableName}";

             SqlCommand cmd = new SqlCommand();
             cmd.Connection = con;

             // 3. Add multiple WHERE conditions with parameter names
             if (conditions.Count > 0)
             {
                 List<string> whereClauses = new List<string>();
                 int paramIndex = 0;

                 foreach (var condition in conditions)
                 {
                     string paramName = $"@param{paramIndex}";
                     whereClauses.Add($"{condition.Key} = {paramName}");
                     cmd.Parameters.AddWithValue(paramName, condition.Value);
                     paramIndex++;
                 }

                 query += " WHERE " + string.Join(" AND ", whereClauses);
             }

             // 4. Add ORDER BY if given
             if (!string.IsNullOrEmpty(orderByColumn))
             {
                 query += $" ORDER BY {orderByColumn} {(ascending ? "ASC" : "DESC")}";
             }

             // 5. Code execution
             cmd.CommandText = query;

             SqlDataReader reader = cmd.ExecuteReader();
             while (reader.Read())
             {
                 for (int i = 0; i < reader.FieldCount; i++)
                 {
                     Console.Write($"{reader.GetName(i)}: {reader[i]}  ");
                 }
                 Console.WriteLine();
             }
         }
         catch (Exception ex)
         {
             Console.WriteLine("Error in dynamic query execution: " + ex.Message);
         }
     }
 }